#autogenerated by sqlautocode

from sqlalchemy import *
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relation

engine = create_engine('mysql://root:mysqlr00t@localhost/BookHunter')
DeclarativeBase = declarative_base()
metadata = DeclarativeBase.metadata
metadata.bind = engine

class Author(DeclarativeBase):
    __tablename__ = 'author'

    __table_args__ = {}

    #column definitions
    author_id = Column(u'author_id', INTEGER(), primary_key=True, nullable=False)
    person_id = Column(u'person_id', INTEGER(), nullable=False)

    #relation definitions


class Book(DeclarativeBase):
    __tablename__ = 'book'

    __table_args__ = {}

    #column definitions
    author_id = Column(u'author_id', VARCHAR(length=45), nullable=False)
    book_id = Column(u'book_id', INTEGER(), primary_key=True, nullable=False)
    book_type = Column(u'book_type', Enum(u'paperback', u'hardcover'), nullable=False)
    date_published = Column(u'date_published', DATE(), nullable=False)
    genre_id = Column(u'genre_id', INTEGER())
    internal_product_id = Column(u'internal_product_id', INTEGER(), nullable=False)
    isbn = Column(u'isbn', DECIMAL(precision=13, scale=0))
    length = Column(u'length', INTEGER(), nullable=False)
    name = Column(u'name', VARCHAR(length=45), nullable=False)
    publisher_id = Column(u'publisher_id', VARCHAR(length=45), nullable=False)
    website_url = Column(u'website_url', VARCHAR(length=45))

    #relation definitions


class Contact(DeclarativeBase):
    __tablename__ = 'contact'

    __table_args__ = {}

    #column definitions
    address1 = Column(u'address1', VARCHAR(length=255))
    address2 = Column(u'address2', VARCHAR(length=255))
    city = Column(u'city', VARCHAR(length=45))
    contact_id = Column(u'contact_id', INTEGER(), primary_key=True, nullable=False)
    email = Column(u'email', VARCHAR(length=255))
    fname = Column(u'fname', VARCHAR(length=45), nullable=False)
    lname = Column(u'lname', VARCHAR(length=45), nullable=False)
    notes = Column(u'notes', TEXT())
    phone1 = Column(u'phone1', DECIMAL(precision=10, scale=0))
    phone2 = Column(u'phone2', DECIMAL(precision=10, scale=0))
    state = Column(u'state', VARCHAR(length=2))
    website_url = Column(u'website_url', VARCHAR(length=255))
    zip = Column(u'zip', VARCHAR(length=10))

    #relation definitions


class Customer(DeclarativeBase):
    __tablename__ = 'customer'

    __table_args__ = {}

    #column definitions
    customer_id = Column(u'customer_id', INTEGER(), primary_key=True, nullable=False)
    customer_since = Column(u'customer_since', TIMESTAMP(), nullable=False)
    person_id = Column(u'person_id', INTEGER(), nullable=False)

    #relation definitions


class DaysOff(DeclarativeBase):
    __tablename__ = 'days_off'

    __table_args__ = {}

    #column definitions
    approved_on = Column(u'approved_on', DATE())
    date_taken_off = Column(u'date_taken_off', DATE(), primary_key=True, nullable=False)
    employee_id = Column(u'employee_id', INTEGER(), primary_key=True, nullable=False)
    reason = Column(u'reason', VARCHAR(length=255), nullable=False)
    request_submitted_on = Column(u'request_submitted_on', DATE(), nullable=False)

    #relation definitions


class EmergencyContact(DeclarativeBase):
    __tablename__ = 'emergency_contact'

    __table_args__ = {}

    #column definitions
    contact_id = Column(u'contact_id', INTEGER(), primary_key=True, nullable=False)
    employee_id = Column(u'employee_id', INTEGER(), nullable=False)
    relationship = Column(u'relationship', VARCHAR(length=255), nullable=False)

    #relation definitions


class Employee(DeclarativeBase):
    __tablename__ = 'employee'

    __table_args__ = {}

    #column definitions
    employee_id = Column(u'employee_id', INTEGER(), primary_key=True, nullable=False)
    pay_grade_id = Column(u'pay_grade_id', INTEGER(), nullable=False)
    person_id = Column(u'person_id', INTEGER(), nullable=False)
    position_id = Column(u'position_id', INTEGER(), nullable=False)
    ssn = Column(u'ssn', DECIMAL(precision=9, scale=0), nullable=False)
    store_number = Column(u'store_number', INTEGER(), nullable=False)

    #relation definitions


class EmployeeShift(DeclarativeBase):
    __tablename__ = 'employee_shifts'

    __table_args__ = {}

    #column definitions
    employee_id = Column(u'employee_id', VARCHAR(length=45), nullable=False)
    shift_end_day = Column(u'shift_end_day', Enum(u'Mon', u'Tue', u'Wed', u'Thu', u'Fri', u'Sat', u'Sun'), nullable=False)
    shift_end_time = Column(u'shift_end_time', TIME(), nullable=False)
    shift_id = Column(u'shift_id', INTEGER(), primary_key=True, nullable=False)
    shift_start_day = Column(u'shift_start_day', Enum(u'Mon', u'Tue', u'Wed', u'Thu', u'Fri', u'Sat', u'Sun'), nullable=False)
    shift_start_time = Column(u'shift_start_time', TIME(), nullable=False)

    #relation definitions


class Genre(DeclarativeBase):
    __tablename__ = 'genre'

    __table_args__ = {}

    #column definitions
    genre_id = Column(u'genre_id', INTEGER(), primary_key=True, nullable=False)
    name = Column(u'name', VARCHAR(length=45), nullable=False)

    #relation definitions


class Hire(DeclarativeBase):
    __tablename__ = 'hire'

    __table_args__ = {}

    #column definitions
    date_hired = Column(u'date_hired', DATE(), nullable=False)
    date_left = Column(u'date_left', DATE())
    employee_id = Column(u'employee_id', INTEGER(), primary_key=True, nullable=False)
    notes = Column(u'notes', TEXT())
    pay_grade_id = Column(u'pay_grade_id', VARCHAR(length=45), nullable=False)
    store_number = Column(u'store_number', INTEGER(), nullable=False)

    #relation definitions


class Magazine(DeclarativeBase):
    __tablename__ = 'magazine'

    __table_args__ = {}

    #column definitions
    genre_id = Column(u'genre_id', VARCHAR(length=45))
    internal_product_id = Column(u'internal_product_id', INTEGER(), nullable=False)
    issn = Column(u'issn', DECIMAL(precision=8, scale=0))
    magazine_id = Column(u'magazine_id', INTEGER(), primary_key=True, nullable=False)
    name = Column(u'name', VARCHAR(length=255), nullable=False)
    publisher_id = Column(u'publisher_id', INTEGER(), nullable=False)
    website_url = Column(u'website_url', VARCHAR(length=255))

    #relation definitions


class Order(DeclarativeBase):
    __tablename__ = 'order'

    __table_args__ = {}

    #column definitions
    internal_product_id = Column(u'internal_product_id', VARCHAR(length=45), nullable=False)
    order_date = Column(u'order_date', DATE(), nullable=False)
    order_id = Column(u'order_id', INTEGER(), primary_key=True, nullable=False)
    order_total = Column(u'order_total', DECIMAL(precision=9, scale=2), nullable=False)
    price_per_unit = Column(u'price_per_unit', DECIMAL(precision=6, scale=2), nullable=False)
    quantity = Column(u'quantity', INTEGER(), nullable=False)
    supplier_id = Column(u'supplier_id', INTEGER(), nullable=False)
    type = Column(u'type', Enum(u'first', u'reorder'))

    #relation definitions


class OtherItem(DeclarativeBase):
    __tablename__ = 'other_item'

    __table_args__ = {}

    #column definitions
    internal_product_id = Column(u'internal_product_id', INTEGER(), nullable=False)
    item_id = Column(u'item_id', INTEGER(), primary_key=True, nullable=False)
    manufacturer = Column(u'manufacturer', VARCHAR(length=255), nullable=False)
    name = Column(u'name', VARCHAR(length=255), nullable=False)
    website_url = Column(u'website_url', VARCHAR(length=255))

    #relation definitions


class PayGrade(DeclarativeBase):
    __tablename__ = 'pay_grade'

    __table_args__ = {}

    #column definitions
    annual_salary = Column(u'annual_salary', DECIMAL(precision=9, scale=2), nullable=False)
    benefit_dental = Column(u'benefit_dental', Enum(u'no', u'yes'), nullable=False)
    benefit_health = Column(u'benefit_health', Enum(u'no', u'yes'), nullable=False)
    benefit_vision = Column(u'benefit_vision', Enum(u'no', u'yes'), nullable=False)
    days_sick_leave = Column(u'days_sick_leave', INTEGER(), nullable=False)
    days_vacation = Column(u'days_vacation', INTEGER(), nullable=False)
    pay_grade_id = Column(u'pay_grade_id', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class PerformanceReview(DeclarativeBase):
    __tablename__ = 'performance_review'

    __table_args__ = {}

    #column definitions
    employee_id = Column(u'employee_id', INTEGER(), nullable=False)
    mgr_employee_id = Column(u'mgr_employee_id', INTEGER(), nullable=False)
    notes = Column(u'notes', TEXT(), nullable=False)
    review_date = Column(u'review_date', DATE(), nullable=False)
    review_grade = Column(u'review_grade', DECIMAL(precision=3, scale=0), nullable=False)
    review_id = Column(u'review_id', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class Person(DeclarativeBase):
    __tablename__ = 'person'

    __table_args__ = {}

    #column definitions
    contact_id = Column(u'contact_id', INTEGER(), nullable=False)
    date_born = Column(u'date_born', DATE(), nullable=False)
    date_deceased = Column(u'date_deceased', DATE())
    person_id = Column(u'person_id', INTEGER(), primary_key=True, nullable=False)
    type = Column(u'type', Enum(u'employee', u'customer'), nullable=False)

    #relation definitions


class Position(DeclarativeBase):
    __tablename__ = 'position'

    __table_args__ = {}

    #column definitions
    name = Column(u'name', VARCHAR(length=45), nullable=False)
    position_id = Column(u'position_id', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class Product(DeclarativeBase):
    __tablename__ = 'product'

    __table_args__ = {}

    #column definitions
    discount_percentage = Column(u'discount_percentage', VARCHAR(length=45))
    full_price = Column(u'full_price', DECIMAL(precision=6, scale=2), nullable=False)
    internal_product_id = Column(u'internal_product_id', INTEGER(), primary_key=True, nullable=False)
    inventory = Column(u'inventory', INTEGER(), primary_key=True, nullable=False)
    reorder_at = Column(u'reorder_at', INTEGER())

    #relation definitions


class Publisher(DeclarativeBase):
    __tablename__ = 'publisher'

    __table_args__ = {}

    #column definitions
    contact_id = Column(u'contact_id', VARCHAR(length=45), nullable=False)
    name = Column(u'name', VARCHAR(length=45), nullable=False)
    publisher_id = Column(u'publisher_id', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class Store(DeclarativeBase):
    __tablename__ = 'store'

    __table_args__ = {}

    #column definitions
    contact_id = Column(u'contact_id', INTEGER(), nullable=False)
    max_capacity = Column(u'max_capacity', INTEGER(), nullable=False)
    mgr_employee_id = Column(u'mgr_employee_id', INTEGER(), nullable=False)
    store_number = Column(u'store_number', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class StoreDept(DeclarativeBase):
    __tablename__ = 'store_dept'

    __table_args__ = {}

    #column definitions
    dept_number = Column(u'dept_number', INTEGER(), primary_key=True, nullable=False)
    mgr_employee_id = Column(u'mgr_employee_id', INTEGER(), nullable=False)
    name = Column(u'name', VARCHAR(length=45), nullable=False)
    office_number = Column(u'office_number', VARCHAR(length=10))
    store_number = Column(u'store_number', INTEGER(), nullable=False)

    #relation definitions


class StoreProduct(DeclarativeBase):
    __tablename__ = 'store_product'

    __table_args__ = {}

    #column definitions
    internal_product_id = Column(u'internal_product_id', VARCHAR(length=45), primary_key=True, nullable=False)
    inventory = Column(u'inventory', INTEGER(), nullable=False)
    store_id = Column(u'store_id', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class Supplier(DeclarativeBase):
    __tablename__ = 'supplier'

    __table_args__ = {}

    #column definitions
    contact_id = Column(u'contact_id', INTEGER(), nullable=False)
    name = Column(u'name', VARCHAR(length=255), nullable=False)
    supplier_id = Column(u'supplier_id', INTEGER(), primary_key=True, nullable=False)

    #relation definitions


class Transaction(DeclarativeBase):
    __tablename__ = 'transaction'

    __table_args__ = {}

    #column definitions
    amount = Column(u'amount', DECIMAL(precision=6, scale=2), nullable=False)
    customer_id = Column(u'customer_id', VARCHAR(length=45), nullable=False)
    employee_id = Column(u'employee_id', VARCHAR(length=45), nullable=False)
    internal_product_id = Column(u'internal_product_id', VARCHAR(length=45), nullable=False)
    method_of_payment = Column(u'method_of_payment', Enum(u'cash', u'debit', u'credit'), nullable=False)
    store_number = Column(u'store_number', INTEGER(), nullable=False)
    timestamp = Column(u'timestamp', TIMESTAMP(), nullable=False)
    transaction_id = Column(u'transaction_id', INTEGER(), primary_key=True, nullable=False)
    type = Column(u'type', Enum(u'purchase', u'return'), nullable=False)

    #relation definitions


